# schema.manifest.yaml
# -----------------------------------------------------------------------------
# Visual lineage (for humans) — source ➜ transforms ➜ modeling
# Render with any Mermaid viewer; kept as comments to avoid breaking YAML.
#
# ```mermaid
# graph TD
#   subgraph Sources
#     WRAW[withings_measurements_raw]\n(CSV ingest) 
#     MFP[nutrition_meals]\n(MFP CSVs)
#     TPRAW[trainingpeaks_workouts_raw]\n(TP export)
#   end
#
#   subgraph Transforms
#     WFIRST[withings_daily_first]\n(first-of-day selection)
#     WVALID[withings_daily_valid]\n(validated daily fat mass)
#     NDAY[nutrition_daily]\n(daily kcal + macros)
#     TPENR[trainingpeaks_enriched]\n(per-workout kcal + enrich)
#   end
#
#   subgraph Modeling
#     P0[p0_staging]\n(daily intake/workout + body comp)
#     P1TR[p1_train_daily]\n(2021–2024)
#     P1TE[p1_test_daily]\n(2025 YTD)
#     WINTR[p1_train_windows_flex7]\n(7–9d windows)
#     WINTE[p1_test_windows_flex7]\n(7–9d windows)
#   end
#
#   %% flows
#   WRAW --> WFIRST --> WVALID --> P0
#   MFP  --> NDAY   --> P0
#   TPRAW--> TPENR  --> P0
#   P0   --> P1TR --> WINTR
#   P0   --> P1TE --> WINTE
#
#   %% Diagnostics (dashed)
#   WRAW -.-> FOD[withings_first_of_day]\n(diagnostic view)
# ```
#
# Notes:
# - `withings_daily_valid` depends on `withings_daily_first` per schema.
# - `withings_first_of_day` is diagnostic only; not used in modeling joins.
# - `daily_facts` sits between Transforms and Modeling, fed by `withings_daily_valid`,
#   `nutrition_daily`, and a daily aggregation of `trainingpeaks_enriched`.
# -----------------------------------------------------------------------------
version: 0.1
warehouse:
  engine: postgres
  # set this to your actual DB/schema names if different
  database: default_db
  schema: public
owners:
  - name: Mark Hill
    role: data-product-owner
slas:

  default_freshness: "daily by 09:00 local"

relations:

  # ---------- CORE INPUTS FOR TODAY ----------
  - id: withings_daily_valid
    purpose: source_of_truth_fat_mass_daily
    type: view
    fq_name: public.withings_daily_valid
    depends_on:
      - public.withings_daily_first
    keys:
      - day_date
    columns:
      - { name: day_date,         type: date,    required: false,  desc: calendar day (local) }
      - { name: weight_kg,        type: numeric, required: false,  desc: daily weight (kg) }
      - { name: fat_mass_kg,      type: numeric, required: false,  desc: Withings fat mass (kg), validated }
      - { name: fat_free_mass_kg, type: numeric, required: false,  desc: fat-free mass (kg) }
    freshness_sla: "daily by 09:00"
    tests:
      shape:
        - not_null: [day_date]
        - unique_keys: [[day_date]]
      semantic:
        - range: { column: fat_mass_kg, min: 10, max: 40 }   # adjust if needed
      completeness:
        - max_gap_days: 7
    usage:
      path_A: true
      path_B: true

  - id: nutrition_daily
    purpose: source_of_truth_kcal_in_daily
    type: view
    fq_name: public.nutrition_daily
    depends_on:
      - public.nutrition_meals
    keys:
      - day_date
    columns:
      - { name: day_date,                    type: date,    required: false,  desc: calendar day (local) }
      - { name: total_calories_kcal,         type: numeric, required: false,  desc: total daily intake kcal }
      - { name: total_fat_g,                 type: numeric, required: false,  desc: total fat (g) }
      - { name: total_saturated_fat_g,       type: numeric, required: false,  desc: saturated fat (g) }
      - { name: total_polyunsaturated_fat_g, type: numeric, required: false,  desc: polyunsaturated fat (g) }
      - { name: total_monounsaturated_fat_g, type: numeric, required: false,  desc: monounsaturated fat (g) }
      - { name: total_trans_fat_g,           type: numeric, required: false,  desc: trans fat (g) }
      - { name: total_cholesterol_mg,        type: numeric, required: false,  desc: cholesterol (mg) }
      - { name: total_sodium_mg,             type: numeric, required: false,  desc: sodium (mg) }
      - { name: total_potassium_mg,          type: numeric, required: false,  desc: potassium (mg) }
      - { name: total_carbohydrates_g,       type: numeric, required: false,  desc: carbohydrates (g) }
      - { name: total_fiber_g,               type: numeric, required: false,  desc: fiber (g) }
      - { name: total_sugar_g,               type: numeric, required: false,  desc: sugar (g) }
      - { name: total_protein_g,             type: numeric, required: false,  desc: protein (g) }
      - { name: total_vitamin_a_iu,          type: numeric, required: false,  desc: vitamin A (IU) }
      - { name: total_vitamin_c_mg,          type: numeric, required: false,  desc: vitamin C (mg) }
      - { name: total_calcium_mg,            type: numeric, required: false,  desc: calcium (mg) }
      - { name: total_iron_mg,               type: numeric, required: false,  desc: iron (mg) }
    freshness_sla: "daily by 09:00"
    tests:
      shape:
        - not_null: [day_date]
        - unique_keys: [[day_date]]
      semantic:
        - range: { column: total_calories_kcal, min: 500, max: 6000 }
    usage:
      path_A: false
      path_B: true
      coaching_weekly_review: [total_protein_g, total_fiber_g]

  - id: trainingpeaks_enriched
    purpose: per_workout_energy_enriched_for_missing_kcal
    type: view
    fq_name: public.trainingpeaks_enriched
    depends_on:
      - public.trainingpeaks_workouts_raw
    keys:
      - local_date
    columns:
      - { name: local_date,           type: date,    required: false,  desc: workout local date }
      - { name: title,                type: text,    required: false,  desc: workout title }
      - { name: workout_type,         type: text,    required: false,  desc: type of workout }
      - { name: workout_description,  type: text,    required: false,  desc: workout description }
      - { name: hours,                type: numeric, required: false,  desc: duration in hours }
      - { name: duration_min,         type: numeric, required: false,  desc: duration in minutes }
      - { name: tss,                  type: numeric, required: false,  desc: training stress score }
      - { name: if_factor,            type: numeric, required: false,  desc: intensity factor }
      - { name: energy_kcal,          type: numeric, required: false,  desc: energy burned (kcal) }
      - { name: is_estimated_energy,  type: boolean, required: false,  desc: whether energy is estimated }
    freshness_sla: "daily by 09:00"
    tests:
      shape:
        - not_null: [local_date]
        - unique_keys: [[local_date, title]]
      semantic:
        - range: { column: energy_kcal, min: 0, max: 8000 }
    usage:
      # Note: per-workout rows; daily aggregation is provided via p0_staging.workout_kcal
      path_B: true

  - id: daily_facts
    purpose: canonical_daily_facts_surface
    type: table
    fq_name: public.daily_facts
    depends_on:
      - public.withings_daily_valid
      - public.nutrition_daily
      - public.trainingpeaks_enriched
    keys: [fact_date]
    columns:
      - { name: fact_date,             type: date,            required: true,  desc: calendar day (local) }
      - { name: intake_kcal,           type: integer,         required: false, desc: daily intake kcal (from nutrition_daily) }
      - { name: protein_g,             type: numeric,         required: false, desc: protein grams }
      - { name: carbs_g,               type: numeric,         required: false, desc: carbohydrate grams }
      - { name: fat_g,                 type: numeric,         required: false, desc: fat grams }
      - { name: nutrition_is_observed, type: boolean,         required: false, desc: true if day is fully logged }
      - { name: workout_kcal,          type: integer,         required: false, desc: exercise kcal (sum of trainingpeaks_enriched) }
      - { name: weight_kg,             type: "numeric(10,3)", required: false, desc: daily weight (kg) }
      - { name: fat_mass_kg,           type: "numeric(10,3)", required: false, desc: Withings fat mass (kg), earliest-of-day }
      - { name: fat_free_mass_kg,      type: "numeric(10,3)", required: false, desc: fat-free mass (kg) }
      - { name: muscle_mass_kg,        type: "numeric(10,3)", required: false, desc: muscle mass (kg) }
      - { name: hydration_kg,          type: "numeric(10,3)", required: false, desc: body water (kg) }
      - { name: bone_mass_kg,          type: "numeric(10,3)", required: false, desc: bone mass (kg) }
    freshness_sla: "daily by 09:00"
    tests:
      shape:
        - not_null: [fact_date]
        - unique_keys: [[fact_date]]
      semantic:
        - range: { column: intake_kcal,  min: 500, max: 6000 }
        - range: { column: workout_kcal, min: 0,   max: 8000 }
        - range: { column: fat_mass_kg,  min: 20,  max: 60 }
    usage:
      path_A: true
      path_B: true

  - id: withings_daily_first
    purpose: canonical_first_weigh_in_daily
    type: view
    fq_name: public.withings_daily_first
    depends_on:
      - public.withings_measurements_raw
    keys:
      - day_date
    columns:
      - { name: day_date,        type: date,                      required: false, desc: calendar day (derived from measured_at, local date) }
      - { name: measured_at,     type: "timestamp with time zone", required: false, desc: earliest reading timestamp (UTC) for that day }
      - { name: weight_lb,       type: numeric,                   required: false, desc: weight (lb) from first reading }
      - { name: fat_mass_lb,     type: numeric,                   required: false, desc: fat mass (lb) from first reading }
      - { name: muscle_mass_lb,  type: numeric,                   required: false, desc: muscle mass (lb) }
      - { name: bone_mass_lb,    type: numeric,                   required: false, desc: bone mass (lb) }
      - { name: body_water_lb,   type: numeric,                   required: false, desc: body water (lb) }
      - { name: source_file,     type: text,                      required: false, desc: CSV provenance label }
      - { name: note,            type: text,                      required: false, desc: freeform note if present }
      - { name: raw,             type: jsonb,                    required: false, desc: original CSV row as JSON }
    freshness_sla: "daily by 09:00"
    tests:
      shape:
        - not_null: [day_date]
        - unique_keys: [[day_date]]
    usage:
      documentation_only: false

  # ---------- MODELING SPLITS (READ-ONLY) ----------
  - id: p0_imputed_intake
    purpose: modeling_imputed_intake_daily
    
    type: table
    fq_name: public.p0_imputed_intake
    keys:
      - fact_date
    columns:
      - { name: fact_date,   type: date,                    required: true,  desc: calendar day (local) }
      - { name: intake_kcal, type: integer,                 required: true,  desc: daily intake kcal after imputation }
      - { name: method,      type: text,                    required: true,  desc: imputation/ingest method }
      - { name: created_at,  type: "timestamp with time zone", required: true,  desc: record creation timestamp }
    tests:
      shape:
        - not_null: [fact_date, intake_kcal]
        - unique_keys: [[fact_date]]
    usage:
      one_time_analysis: true

  - id: p0_staging
    purpose: modeling_staging_daily
    type: table
    fq_name: public.p0_staging
    keys:
      - fact_date
    columns:
      - { name: fact_date,    type: date,           required: true,  desc: calendar day (local) }
      - { name: intake_kcal,  type: integer,        required: false, desc: intake kcal (from p0_imputed_intake) }
      - { name: workout_kcal, type: integer,        required: false, desc: exercise kcal (from trainingpeaks_enriched) }
      - { name: weight_kg,    type: "numeric(10,3)", required: false, desc: daily weight (kg) }
      - { name: fat_mass_kg,  type: "numeric(10,3)", required: false, desc: daily fat mass (kg) }
      - { name: lean_mass_kg, type: "numeric(10,3)", required: false, desc: daily lean mass (kg) }
    tests:
      shape:
        - not_null: [fact_date]
        - unique_keys: [[fact_date]]
      semantic:
        - range: { column: fat_mass_kg,  min: 20,  max: 60 }
        - range: { column: intake_kcal,  min: 500, max: 6000 }
        - range: { column: workout_kcal, min: 0,   max: 8000 }
    usage:
      one_time_analysis: true

  - id: p1_train_daily
    purpose: modeling_train_split_2021_2024
    type: view
    fq_name: public.p1_train_daily
    depends_on:
      - public.p0_staging
    keys: [fact_date]
    columns:
      - { name: fact_date,     type: date,           required: false }
      - { name: intake_kcal,   type: integer,        required: false }
      - { name: workout_kcal,  type: integer,        required: false }
      - { name: net_kcal,      type: integer,        required: false }
      - { name: fat_mass_kg,   type: "numeric(10,3)", required: false }
      - { name: lean_mass_kg,  type: "numeric(10,3)", required: false }
      - { name: weight_kg,     type: "numeric(10,3)", required: false }
    time_range: { start: "2021-01-01", end: "2024-12-31" }
    usage:
      one_time_analysis: true

  - id: p1_test_daily
    purpose: modeling_test_split_2025_ytd
    type: view
    fq_name: public.p1_test_daily
    depends_on:
      - public.p0_staging
    keys: [fact_date]
    columns:
      - { name: fact_date,     type: date,           required: false }
      - { name: intake_kcal,   type: integer,        required: false }
      - { name: workout_kcal,  type: integer,        required: false }
      - { name: net_kcal,      type: integer,        required: false }
      - { name: fat_mass_kg,   type: "numeric(10,3)", required: false }
      - { name: lean_mass_kg,  type: "numeric(10,3)", required: false }
      - { name: weight_kg,     type: "numeric(10,3)", required: false }
    time_range: { start: "2025-01-01", end: "current" }
    usage:
      one_time_analysis: true

  # ---------- MODELING WINDOWS (GENERATED) ----------
  - id: p1_train_windows_flex7
    purpose: modeling_train_windows_flexible_7d
    type: view
    fq_name: public.p1_train_windows_flex7
    depends_on:
      - public.p1_train_daily
    keys:
      - end_date
    columns:
      - { name: start_date,        type: date,    required: false,  desc: window start date }
      - { name: end_date,          type: date,    required: false,  desc: window end date }
      - { name: days,              type: integer, required: false,  desc: window length in days }
      - { name: fm_start,          type: "numeric(10,3)", required: false,  desc: fat mass at start of window }
      - { name: fm_end,            type: "numeric(10,3)", required: false,  desc: fat mass at end of window }
      - { name: delta_fm_kg,       type: numeric, required: false,  desc: fat mass change over window }
      - { name: intake_kcal_sum,   type: bigint,  required: false,  desc: total intake calories over window }
      - { name: workout_kcal_sum,  type: bigint,  required: false,  desc: total workout calories over window }
      - { name: net_kcal_sum,      type: bigint,  required: false,  desc: net calories over window }
      - { name: is_7d,             type: boolean, required: false,  desc: true if exactly 7-day window }
      - { name: is_8d,             type: boolean, required: false,  desc: true if exactly 8-day window }
      - { name: is_9d,             type: boolean, required: false,  desc: true if exactly 9-day window }
    time_range: { start: "2021-01-01", end: "2024-12-31" }
    usage:
      one_time_analysis: true

  - id: p1_test_windows_flex7
    purpose: modeling_test_windows_flexible_7d
    type: view
    fq_name: public.p1_test_windows_flex7
    depends_on:
      - public.p1_test_daily
    keys:
      - end_date
    columns:
      - { name: start_date,        type: date,    required: false,  desc: window start date }
      - { name: end_date,          type: date,    required: false,  desc: window end date }
      - { name: days,              type: integer, required: false,  desc: window length in days }
      - { name: fm_start,          type: "numeric(10,3)", required: false,  desc: fat mass at start of window }
      - { name: fm_end,            type: "numeric(10,3)", required: false,  desc: fat mass at end of window }
      - { name: delta_fm_kg,       type: numeric, required: false,  desc: fat mass change over window }
      - { name: intake_kcal_sum,   type: bigint,  required: false,  desc: total intake calories over window }
      - { name: workout_kcal_sum,  type: bigint,  required: false,  desc: total workout calories over window }
      - { name: net_kcal_sum,      type: bigint,  required: false,  desc: net calories over window }
      - { name: is_7d,             type: boolean, required: false,  desc: true if exactly 7-day window }
      - { name: is_8d,             type: boolean, required: false,  desc: true if exactly 8-day window }
      - { name: is_9d,             type: boolean, required: false,  desc: true if exactly 9-day window }
    time_range: { start: "2025-01-01", end: "current" }
    usage:
      one_time_analysis: true

  - id: p1_fm_clean
    purpose: modeling_cleaned_fat_mass_daily
    type: table
    fq_name: public.p1_fm_clean
    keys:
      - fact_date
    columns:
      - { name: fact_date,    type: "timestamp without time zone", required: false,  desc: calendar day (local) }
      - { name: fat_mass_kg,  type: "double precision", required: false,  desc: cleaned fat mass (kg), outliers removed }
    tests:
      shape:
        - unique_keys: [[fact_date]]
      semantic:
        - range: { column: fat_mass_kg, min: 20, max: 60 }
    usage:
      one_time_analysis: true

  # ---------- RICH RAW SOURCES (DOCUMENTED, NOT USED TODAY) ----------
  - id: nutrition_meals
    purpose: raw_mfp_meal_rows_for_aggregation
    type: table
    fq_name: public.nutrition_meals
    keys: [day_date, meal]
    columns:
      - { name: day_date,               type: date,     required: true }
      - { name: meal,                   type: text,     required: true }
      - { name: calories_kcal,          type: "numeric(10,2)",  required: false }
      - { name: protein_g,              type: "numeric(10,2)",  required: false }
      - { name: fiber_g,                type: "numeric(10,2)",  required: false }
      - { name: carbohydrates_g,        type: "numeric(10,2)",  required: false }
      - { name: fat_g,                  type: "numeric(10,2)",  required: false }
      - { name: saturated_fat_g,        type: "numeric(10,2)",  required: false }
      - { name: polyunsaturated_fat_g,  type: "numeric(10,2)",  required: false }
      - { name: monounsaturated_fat_g,  type: "numeric(10,2)",  required: false }
      - { name: trans_fat_g,            type: "numeric(10,2)",  required: false }
      - { name: cholesterol_mg,         type: "numeric(10,2)",  required: false }
      - { name: sodium_mg,              type: "numeric(10,2)",  required: false }
      - { name: potassium_mg,           type: "numeric(10,2)",  required: false }
      - { name: sugar_g,                type: "numeric(10,2)",  required: false }
      - { name: vitamin_a_iu,           type: "numeric(10,2)",  required: false }
      - { name: vitamin_c_mg,           type: "numeric(10,2)",  required: false }
      - { name: calcium_mg,             type: "numeric(10,2)",  required: false }
      - { name: iron_mg,                type: "numeric(10,2)",  required: false }
      # … (full list available in DB; keep manifest concise)
    time_range: { start: "2021-01-01", end: "2025-08-24" }
    column_policy: subset
    freshness_sla: "append-only via CSV import"
    usage:
      documentation_only: true

  - id: trainingpeaks_workouts_raw
    purpose: raw_tp_workouts
    type: table
    fq_name: public.trainingpeaks_workouts_raw
    keys: [workout_day, title]   # adjust if a native id exists
    columns:
      - { name: workout_day,   type: text,     required: false }
      - { name: title,         type: text,     required: false }
      - { name: workout_description, type: text, required: false }
      - { name: planned_duration, type: text,  required: false }
      - { name: planned_distance_m, type: text, required: false }
      - { name: coach_comments, type: text,    required: false }
      - { name: distance_m,    type: text,     required: false }
      - { name: power_avg,     type: text,     required: false }
      - { name: power_max,     type: text,     required: false }
      - { name: athlete_comments, type: text,  required: false }
      - { name: time_total_hours, type: text,  required: false }
      - { name: velocity_avg,  type: text,     required: false }
      - { name: velocity_max,  type: text,     required: false }
      - { name: cadence_avg,   type: text,     required: false }
      - { name: cadence_max,   type: text,     required: false }
      - { name: hr_avg,        type: text,     required: false }
      - { name: hr_max,        type: text,     required: false }
      - { name: torque_avg,    type: text,     required: false }
      - { name: torque_max,    type: text,     required: false }
      - { name: energy_kcal,   type: text,     required: false }
      - { name: tss,           type: text,     required: false }
      - { name: if_factor,     type: text,     required: false }
      - { name: workout_type,  type: text,     required: false }
      - { name: source,        type: text,     required: false }
      - { name: rpe,           type: text,     required: false }
      - { name: feeling,       type: text,     required: false }
      # Heart rate zones (hr_zone1_min through hr_zone10_min)
      - { name: hr_zone1_min,  type: text,     required: false }
      - { name: hr_zone2_min,  type: text,     required: false }
      - { name: hr_zone3_min,  type: text,     required: false }
      - { name: hr_zone4_min,  type: text,     required: false }
      - { name: hr_zone5_min,  type: text,     required: false }
      - { name: hr_zone6_min,  type: text,     required: false }
      - { name: hr_zone7_min,  type: text,     required: false }
      - { name: hr_zone8_min,  type: text,     required: false }
      - { name: hr_zone9_min,  type: text,     required: false }
      - { name: hr_zone10_min, type: text,     required: false }
      # Power zones (pwr_zone1_min through pwr_zone10_min)
      - { name: pwr_zone1_min, type: text,     required: false }
      - { name: pwr_zone2_min, type: text,     required: false }
      - { name: pwr_zone3_min, type: text,     required: false }
      - { name: pwr_zone4_min, type: text,     required: false }
      - { name: pwr_zone5_min, type: text,     required: false }
      - { name: pwr_zone6_min, type: text,     required: false }
      - { name: pwr_zone7_min, type: text,     required: false }
      - { name: pwr_zone8_min, type: text,     required: false }
      - { name: pwr_zone9_min, type: text,     required: false }
      - { name: pwr_zone10_min, type: text,    required: false }
      # … many more fields available for future refinements
    column_policy: subset
    usage:
      documentation_only: true

  - id: withings_measurements_raw
    purpose: raw_withings_csv_measurements
    type: table
    fq_name: public.withings_measurements_raw
    keys:
      - measured_at
    columns:
      - { name: measured_at,       type: "timestamp with time zone", required: true,  desc: measurement timestamp (UTC) }
      - { name: weight_lb,         type: numeric,  required: false,  desc: weight in pounds }
      - { name: fat_mass_lb,       type: numeric,  required: false,  desc: fat mass in pounds }
      - { name: muscle_mass_lb,    type: numeric,  required: false,  desc: muscle mass in pounds }
      - { name: bone_mass_lb,      type: numeric,  required: false,  desc: bone mass in pounds }
      - { name: body_water_lb,     type: numeric,  required: false,  desc: body water in pounds }
      - { name: source_file,       type: text,     required: false,  desc: source CSV filename }
      - { name: note,              type: text,     required: false,  desc: user notes }
      - { name: raw,               type: jsonb,    required: false,  desc: original CSV row as JSON }
      - { name: id,                type: bigint,   required: true,   desc: surrogate primary key }
      - { name: ingested_at,       type: "timestamp with time zone", required: true,   desc: row ingest timestamp }
    tests:
      shape:
        - not_null: [measured_at]
        - unique_keys: [[measured_at]]
    usage:
      documentation_only: true

  - id: withings_daily
    purpose: raw_withings_daily_ingest
    type: table
    fq_name: public.withings_daily
    keys: [day_date]
    columns:
      - { name: day_date,          type: date,     required: true }
      - { name: fat_mass_kg,       type: numeric,  required: false }
      - { name: weight_kg,         type: numeric,  required: false }
      - { name: fat_free_mass_kg,  type: numeric,  required: false }
      - { name: source,            type: text,     required: false }
    usage:
      documentation_only: true

  - id: performance_goals
    purpose: forward_looking_goals_for_coach
    type: table
    fq_name: public.performance_goals
    keys:
      - goal_id
    columns:
      - { name: goal_id,              type: uuid,   required: true,  desc: unique identifier }
      - { name: goal_name,            type: text,   required: true,  desc: descriptive label e.g. "Mount Diablo sub-60" }
      - { name: target_date,          type: date,   required: true,  desc: goal completion date }
      - { name: target_fat_mass_lb,   type: numeric, required: false, desc: optional fat mass target (lbs) }
      - { name: target_weight_kg,     type: numeric, required: false, desc: optional weight goal }
      - { name: target_ftp_w,         type: integer, required: false, desc: FTP test target (W) }
      - { name: target_ave_watts,     type: integer, required: false, desc: realistic average watts to sustain for the climb }
      - { name: bike_weight_kg,       type: numeric, required: false, desc: bike + gear mass }
      - { name: target_w_per_kg,      type: numeric, required: false, desc: system W/kg = target_ave_watts ÷ (target_weight_kg + bike_weight_kg) }
      - { name: target_daily_deficit, type: integer, required: true,  desc: prescribed kcal/day deficit (default 500) }
      - { name: tss_ramp_plan,        type: jsonb,  required: false, desc: plan for weekly TSS progression }
      - { name: created_at,           type: timestamp with time zone, required: true }
      - { name: updated_at,           type: timestamp with time zone, required: true }

  - id: facts_intake_dow_medians
    purpose: support_intake_imputation_by_day_of_week
    type: view
    fq_name: public.facts_intake_dow_medians
    depends_on:
      - public.daily_facts
    keys:
      - day_of_week
    columns:
      - { name: day_of_week,        type: text,    required: true,  desc: Monday..Sunday }
      - { name: intake_kcal_median, type: numeric, required: true,  desc: median intake_kcal for this day-of-week computed from daily_facts }
    freshness_sla: "recompute on demand"
    tests:
      shape:
        - not_null: [day_of_week, intake_kcal_median]

  # ---------- GOLD LAYER (DERIVED, PARAMETER-VERSIONED) ----------
  - id: model_params_timevarying
    purpose: versioned_model_parameters_effective_dated
    type: table
    fq_name: public.model_params_timevarying
    keys:
      - params_version
    columns:
      - { name: params_version,        type: text,                      required: true,  desc: opaque version id (e.g., v2025_09_01) }
      - { name: effective_start_date,  type: date,                      required: true,  desc: first date (inclusive) this version applies }
      - { name: effective_end_date,    type: date,                      required: false, desc: last date (inclusive); null = open-ended }
      - { name: c_exercise_comp,       type: numeric,                   required: true,  desc: "exercise compensation factor c in [0,1]" }
      - { name: alpha_fm,              type: numeric,                   required: true,  desc: EMA alpha for fat mass (kg) }
      - { name: alpha_lbm,             type: numeric,                   required: true,  desc: EMA alpha for LBM used for BMR stability }
      - { name: bmr0_kcal,             type: numeric,                   required: true,  desc: BMR intercept (kcal/day) }
      - { name: k_lbm_kcal_per_kg,     type: numeric,                   required: true,  desc: BMR slope per kg of LBM }
      - { name: kcal_per_kg_fat,       type: numeric,                   required: true,  desc: kcal-to-kg mapping for fat mass (e.g., 7700) }
      - { name: method_notes,          type: text,                      required: false, desc: freeform notes / provenance }
      - { name: approved_by,           type: text,                      required: false, desc: human approver }
      - { name: approved_at,           type: "timestamp with time zone", required: false, desc: approval timestamp }
    freshness_sla: "static catalog; insert on approval"
    tests:
      shape:
        - not_null: [params_version, effective_start_date, c_exercise_comp, alpha_fm, alpha_lbm, bmr0_kcal, k_lbm_kcal_per_kg, kcal_per_kg_fat]
        - unique_keys: [[params_version]]

  - id: daily_series_materialized
    purpose: derived_daily_series_for_ui_and_snapshots
    type: table
    fq_name: public.daily_series_materialized
    keys:
      - fact_date
    columns:
      - { name: fact_date,              type: date,            required: true,  desc: calendar day (local) }
      - { name: params_version_used,    type: text,            required: true,  desc: params version applied when computing this row }
      - { name: fat_mass_ema_kg,        type: "numeric(10,3)", required: true,  desc: EMA-smoothed fat mass (kg) }
      - { name: lbm_ema_kg_for_bmr,     type: "numeric(10,3)", required: true,  desc: LBM used for BMR calc after light EMA }
      - { name: bmr_kcal,               type: integer,         required: true,  desc: basal metabolic rate (kcal/day), computed as bmr0_kcal + k_lbm_kcal_per_kg * lbm_ema_kg_for_bmr for params_version_used }
      - { name: adj_exercise_kcal,      type: integer,         required: true,  desc: (1 - c) * workout_kcal using params_version_used }
      - { name: net_kcal,               type: integer,         required: true,  desc: intake_kcal - adj_exercise_kcal - bmr_kcal }
      - { name: computed_at,            type: "timestamp with time zone", required: true,  desc: computation timestamp }
      - { name: compute_run_id,         type: text,            required: false, desc: batch/run id for reproducibility }
    freshness_sla: "daily by 09:00"
    depends_on:
      - public.daily_facts
      - public.model_params_timevarying
    tests:
      shape:
        - not_null: [fact_date, params_version_used, fat_mass_ema_kg, lbm_ema_kg_for_bmr, bmr_kcal, net_kcal]
        - unique_keys: [[fact_date]]
      semantic:
        - range: { column: fat_mass_ema_kg, min: 10,  max: 60 }
        - range: { column: bmr_kcal,        min: 900, max: 4000 }
        - range: { column: net_kcal,        min: -5000, max: 3000 }

  - id: weekly_coaching_snapshot
    purpose: immutable_weekly_review_snapshot_mon_to_sun
    type: table
    fq_name: public.weekly_coaching_snapshot
    keys:
      - week_start
    columns:
      - { name: week_start,               type: date,            required: true,  desc: Monday (local) }
      - { name: week_end,                 type: date,            required: true,  desc: Sunday (local) }
      - { name: params_version_used,      type: text,            required: true,  desc: params version used for this snapshot }
      - { name: avg_intake_kcal,          type: integer,         required: true,  desc: average intake over the week }
      - { name: avg_adj_exercise_kcal,    type: integer,         required: true,  desc: average (1-c)*exercise over the week }
      - { name: avg_bmr_kcal,             type: integer,         required: true,  desc: average BMR over the week }
      - { name: avg_net_kcal,             type: integer,         required: true,  desc: average net kcal over the week }
      - { name: days_on_target,           type: integer,         required: true,  desc: count of days with net <= -500 }
      - { name: predicted_delta_fm_kg,    type: "numeric(10,3)", required: true,  desc: predicted fat mass change for the week }
      - { name: uncertainty_kg,           type: "numeric(10,3)", required: true,  desc: uncertainty band (±) for predicted change }
      - { name: observed_delta_fm_kg,     type: "numeric(10,3)", required: true,  desc: observed fat mass change (EMA Sun vs prior Sun) }
      - { name: within_expected_range,    type: boolean,         required: true,  desc: true if observed within expected band }
      - { name: decision,                 type: text,            required: true,  desc: Approve | Within Noise | Investigate }
      - { name: completeness_pct,         type: "numeric(5,2)",  required: true,  desc: percent of days with sufficient data }
      - { name: data_freeze_ts,           type: "timestamp with time zone", required: true,  desc: when this snapshot was computed }
      - { name: reviewer,                 type: text,            required: false, desc: human reviewer id/email }
      - { name: decision_notes,           type: text,            required: false, desc: rationale / notes }
    freshness_sla: "written on Sunday review"
    depends_on:
      - public.daily_series_materialized
      - public.model_params_timevarying
    tests:
      shape:
        - not_null: [week_start, week_end, params_version_used, avg_net_kcal, days_on_target, predicted_delta_fm_kg, observed_delta_fm_kg, within_expected_range, decision, data_freeze_ts]
        - unique_keys: [[week_start]]

  - id: audit_hil
    purpose: audit_log_human_in_loop_decisions
    type: table
    fq_name: public.audit_hil
    keys:
      - snapshot_week_start
      - created_at
    columns:
      - { name: snapshot_week_start, type: date,                      required: true,  desc: FK to weekly_coaching_snapshot.week_start }
      - { name: action,              type: text,                      required: true,  desc: Approve | Defer | ChangeParams }
      - { name: actor,               type: text,                      required: true,  desc: user id or email }
      - { name: rationale,           type: text,                      required: false, desc: freeform rationale }
      - { name: previous_params_version, type: text,                  required: false, desc: params before change }
      - { name: new_params_version,  type: text,                      required: false, desc: params after change (if any) }
      - { name: created_at,          type: "timestamp with time zone", required: true,  desc: log timestamp }
    freshness_sla: "append at time of decision"
    tests:
      shape:
        - not_null: [snapshot_week_start, action, actor, created_at]

  - id: withings_first_of_day
    purpose: diagnostic_first_of_day_with_protocol_tags
    type: view
    fq_name: public.withings_first_of_day
    depends_on:
      - public.withings_measurements_raw
    keys:
      - day_date
    columns:
      - { name: day_date,             type: date,                      required: false, desc: local calendar day }
      - { name: selected_at_local,    type: "timestamp without time zone", required: false, desc: earliest local timestamp chosen }
      - { name: is_late_weigh_in,     type: boolean,                   required: false, desc: true if selected after 09:00 local }
      - { name: measurement_count,    type: bigint,                   required: false, desc: count of raw readings that day }
      - { name: weight_kg,            type: numeric,                   required: false, desc: converted weight in kg }
      - { name: fat_mass_kg,          type: numeric,                   required: false, desc: converted fat mass in kg }
      - { name: fat_free_mass_kg,     type: numeric,                   required: false, desc: converted fat-free mass in kg }
      - { name: source_file,          type: text,                      required: false, desc: CSV provenance label }
      - { name: note,                 type: text,                      required: false, desc: user note if present }
    freshness_sla: "daily by 09:00"
    tests:
      shape:
        - not_null: [day_date]
        - unique_keys: [[day_date]]
    usage:
      documentation_only: true

contracts:
  # Validate the three core inputs align by date before modeling
  join_requirements:
    - name: daily_facts_alignment_core
      left: daily_facts.fact_date
      rights:
        - withings_daily_valid.day_date
        - nutrition_daily.day_date
        - trainingpeaks_enriched.local_date
      tolerance:
        max_missing_dates_per_month: 3
    - name: daily_alignment_core
      left: withings_daily_valid.day_date
      rights:
        - nutrition_daily.day_date
        - trainingpeaks_enriched.local_date
      tolerance:
        max_missing_dates_per_month: 3
    - name: p0_alignment_core_dates
      left: p0_staging.fact_date
      rights:
        - withings_daily_valid.day_date
        - nutrition_daily.day_date
      tolerance:
        max_missing_dates_per_month: 3
    - name: daily_facts_has_series
      left: daily_facts.fact_date
      rights:
        - daily_series_materialized.fact_date
      tolerance:
        max_missing_dates_per_month: 3
    - name: weekly_snapshot_coverage
      left: weekly_coaching_snapshot.week_start
      rights:
        - daily_series_materialized.fact_date
      tolerance:
        min_days_present_in_week: 6

  # Fingerprint columns used by preflight introspection
  fingerprints:
    - id: core_shape
      relations:
        - withings_daily_valid
        - nutrition_daily
        - p0_staging
        - p1_train_daily
        - p1_test_daily
        - daily_facts
        - model_params_timevarying
        - daily_series_materialized
        - weekly_coaching_snapshot
        - audit_hil
      method: hash_column_names_types_order

outputs:
  # where we will log snapshots/checks (created when you greenlight code)
  state_checks_table: analytics._state_checks
  state_snapshot_table: analytics._state_snapshot

policies:
  versioning:
    strategy: static_for_now   # upgrade later to immutable __vYYYY_MM_DD + __latest
  failure_mode: fail_closed_pre_modeling
  caching_key_includes: [fingerprints.core_shape]